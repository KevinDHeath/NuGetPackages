<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:Common.Wpf.Controls">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/Common.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- Common colors -->
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
  <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
  <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>

  <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
    <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFECF4FC" Offset="0.0"/>
    <GradientStop Color="#FFDCECFC" Offset="1.0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFDAECFC" Offset="0.0"/>
    <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
  </LinearGradientBrush>

  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="MinWidth" Value="0"/>
    <Setter Property="MinHeight" Value="0"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                        HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="ClickMode" Value="Press"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="templateRoot" SnapsToDevicePixels="true"
							Background="{StaticResource ComboBox.Static.Background}"
							BorderBrush="#FFACACAC"
							Style="{StaticResource commonEditBorderStyle}">
            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
								HorizontalAlignment="Right"
								Margin="0" SnapsToDevicePixels="true"
								Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
              <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                    Fill="#FF606060" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                           Value="true"/>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
										       Value="false"/>
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
										       Value="false"/>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
										       Value="true"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="templateRoot"
                      Value="{StaticResource ComboBox.Static.Editable.Background}"/>
              <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
              <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
              <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="arrow"
                      Value="{StaticResource ComboBox.Pressed.Glyph}"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                           Value="true"/>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										       Value="false"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.MouseOver.Background}"/>
              <Setter Property="BorderBrush" TargetName="templateRoot"
									    Value="{StaticResource MouseOver.Border}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
										       Value="true"/>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										       Value="true"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.Static.Editable.Background}"/>
              <Setter Property="BorderBrush" TargetName="templateRoot"
									    Value="{StaticResource MouseOver.Border}"/>
              <Setter Property="Background" TargetName="splitBorder"
									    Value="{StaticResource ComboBox.MouseOver.Background}"/>
              <Setter Property="BorderBrush" TargetName="splitBorder"
									    Value="{StaticResource MouseOver.Border}"/>
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Fill" TargetName="arrow"
									    Value="{StaticResource ComboBox.Pressed.Glyph}"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
										       Value="true"/>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										       Value="false"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.Pressed.Background}"/>
              <Setter Property="BorderBrush" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.Pressed.Border}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
										       Value="true"/>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										       Value="true"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.Static.Editable.Background}"/>
              <Setter Property="BorderBrush" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.Pressed.Border}"/>
              <Setter Property="Background" TargetName="splitBorder"
									    Value="{StaticResource ComboBox.Pressed.Background}"/>
              <Setter Property="BorderBrush" TargetName="splitBorder"
									    Value="{StaticResource ComboBox.Pressed.Border}"/>
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Fill" TargetName="arrow"
									Value="{StaticResource ComboBox.Disabled.Glyph}"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
										       Value="false"/>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										       Value="false"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
              <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
										       Value="false"/>
                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										       Value="true"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Background" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.Static.Editable.Background}"/>
              <Setter Property="BorderBrush" TargetName="templateRoot"
									    Value="{StaticResource ComboBox.Disabled.Glyph}"/>
              <Setter Property="Background" TargetName="splitBorder"
									    Value="Transparent"/>
              <Setter Property="BorderBrush" TargetName="splitBorder"
									    Value="Transparent"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type local:ComboBox}">
    <ControlTemplate.Resources>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
    </ControlTemplate.Resources>

    <StackPanel>
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
					     IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
					     Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
          <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
												                MaxHeight="{TemplateBinding MaxDropDownHeight}">
            <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
								    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
							BorderThickness="1">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
											    VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
												       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												       Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
													        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
							        BorderBrush="{TemplateBinding BorderBrush}"
							        BorderThickness="{TemplateBinding BorderThickness}"
							        Grid.ColumnSpan="2"
							        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							        Style="{StaticResource ComboBoxToggleButton}"/>
        <Border x:Name="border" Style="{StaticResource commonEditBorderStyle}">
          <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							     Padding="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
							     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
      </Grid>
      <ItemsControl Margin="0" ItemsSource="{TemplateBinding Validation.Errors}"
						        Visibility="{TemplateBinding IsErrorShown, Converter={StaticResource BooleanToVisibility}}">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <TextBlock Style="{StaticResource commonErrorTextBlockStyle}"
								       Text="{Binding ErrorContent}"/>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </StackPanel>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" TargetName="border" Value="0.56"/>
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="true">
        <Setter Property="Foreground" Value="Black"/>
      </Trigger>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
      </Trigger>
      <Trigger Property="HasItems" Value="false">
        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
      </Trigger>
      <Trigger Property="Validation.HasError" Value="True">
        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Validation.HasError}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true"/>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        <Setter Property="Canvas.Top" TargetName="opaqueRect"
						    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        <Setter Property="Canvas.Left" TargetName="opaqueRect"
						    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type local:ComboBox}">
    <ControlTemplate.Resources>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
    </ControlTemplate.Resources>

    <StackPanel>
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
				   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
				   Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
          <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
												                MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
												                MaxHeight="{TemplateBinding MaxDropDownHeight}">
            <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
							BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0"
											    VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
												       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
												       Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
													        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </theme:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
							        BorderBrush="{TemplateBinding BorderBrush}"
							        BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"
							        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							        Style="{StaticResource ComboBoxToggleButton}"/>
        <StackPanel Margin="1">
          <ContentPresenter x:Name="contentPresenter"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
									          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
									          Content="{TemplateBinding SelectionBoxItem}"
									          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
									          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									          IsHitTestVisible="false" Margin="{TemplateBinding Margin}"
									          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </StackPanel>
      </Grid>
      <ItemsControl Margin="0" ItemsSource="{TemplateBinding Validation.Errors}"
						        Visibility="{TemplateBinding IsErrorShown, Converter={StaticResource BooleanToVisibility}}">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <TextBlock Style="{StaticResource commonErrorTextBlockStyle}"
								   Text="{Binding ErrorContent}"/>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>
    </StackPanel>
    <ControlTemplate.Triggers>
      <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
      </Trigger>
      <Trigger Property="HasItems" Value="false">
        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
      </Trigger>
      <Trigger Property="Validation.HasError" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource Validation.HasError}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true"/>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
        <Setter Property="Canvas.Top" TargetName="opaqueRect"
						Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
        <Setter Property="Canvas.Left" TargetName="opaqueRect"
						Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="controlComboBoxStyle" TargetType="{x:Type local:ComboBox}">
    <Setter Property="MinHeight" Value="27"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="false">
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
      </Trigger>
      <Trigger Property="IsEditable" Value="true">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
      </Trigger>
      <Trigger Property="IsErrorShown" Value="True">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource commonErrorItemTemplate}"/>
      </Trigger>
      <Trigger Property="IsErrorShown" Value="False">
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>