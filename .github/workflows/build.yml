# This is a reusable workflow to build a .NET project or solution
name: .NET Build

on:
  # Called from another workflow passing input values
  workflow_call:
    inputs:
      run-name:
        description: A name for the run
        type: string
        default: ""
      runs-on:
        description: The runner type to use
        type: string
        default: ubuntu-latest
      project-folder:
        description: Folder containing the solution
        type: string
        default: .

  # Triggering manually
  workflow_dispatch:
     inputs:
      run-name:
        description: A name for the run
        type: string
        required: true
      runs-on:
        description: The runner type to use
        type: choice
        options:
        - ubuntu-latest
        - windows-latest
        default: ubuntu-latest
      project-folder:
        description: Folder containing the solution
        type: string
        default: .

run-name: ${{ inputs.run-name }}

jobs:

  # variables:
  #   name: Variables
  #   runs-on: ${{ inputs.runs-on }}

  #   steps:
  #     - name: Get branch name
  #       id: branch-name
  #       uses: tj-actions/branch-names@v8

  #     - name: Inputs
  #       run: |
  #         echo "Running on ${{ inputs.runs-on }}"
  #         echo "Branch name is ${{ steps.branch-name.outputs.current_branch }}"
  #         echo "Working directory is ${{ inputs.project-folder }}"

  #     - name: Linux
  #       if: runner.os == 'Linux'
  #       env:
  #         GITHUB_ACTIONS: ${{ toJson(github) }}
  #       run: echo "GITHUB_ACTIONS is $GITHUB_ACTIONS"

  #     - name: Windows
  #       if: runner.os == 'Windows'
  #       run: echo "GITHUB_ACTIONS is $env:GITHUB_ACTIONS"

  dotnetbuild:
    # needs: variables
    name: Build .NET
    runs-on: ${{ inputs.runs-on }}
    env:
      ARTIFACT_PATH: ${{ github.workspace }}/local

    # Set the default working directory
    defaults:
      run:
        working-directory: ${{ inputs.project-folder }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Setup .NET 8.0
      #   uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: 8.0.x

      - name: Create artifacts folder
        run: mkdir ${{ env.ARTIFACT_PATH }}

      - name: Restore build dependencies
        run: dotnet restore

      - name: Restore testing dependencies
        run: dotnet restore /p:Configuration="Testing"

      - name: Build
        run: dotnet build --no-restore

      - name: Run tests
        shell: pwsh
        run: ${{ github.workspace }}/Test/Unit/RunTests.ps1 ${{ env.ARTIFACT_PATH }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-Artifacts
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 5

