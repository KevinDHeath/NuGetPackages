# This is a reusable workflow to build a .NET project or solution
name: .NET Build

on:
  # Called from another workflow passing input values
  workflow_call:
    inputs:
      run-name:
        description: A name for the run
        type: string
        default: ""
      runs-on:
        description: The runner type to use
        type: string
        default: ubuntu-latest
      project-folder:
        description: The folder containing the solution
        type: string
        default: .

  # Triggering manually
  workflow_dispatch:
     inputs:
      run-name:
        description: A name for the run
        type: string
        required: true
      runs-on:
        description: The runner type to use
        type: choice
        options:
        - ubuntu-latest
        - windows-latest
        default: ubuntu-latest
      project-folder:
        description: The folder containing the solution
        type: string
        default: .

run-name: ${{ inputs.run-name }}

jobs:

  variables:
    name: Variables
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Inputs
        run: |
          echo "Running on ${{ inputs.runs-on }}"
          echo "Working directory is ${{ inputs.project-folder }}"

      - name: Linux
        if: runner.os == 'Linux'
        env:
          GITHUB_ACTIONS: ${{ toJson(github) }}
        run: echo "GITHUB_ACTIONS is $GITHUB_ACTIONS"

      - name: Windows
        if: runner.os == 'Windows'
        run: echo "GITHUB_ACTIONS is $env:GITHUB_ACTIONS"

  dotnetbuild:
    needs: variables
    name: Build .NET
    runs-on: ${{ inputs.runs-on }}

    # Set the default working directory
    defaults:
      run:
        working-directory: ${{ inputs.project-folder }}

    steps:

      # Check-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

