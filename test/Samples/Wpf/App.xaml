<Application x:Class="Sample.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:pf="clr-namespace:System.Windows;assembly=PresentationFramework"
             xmlns:cc="clr-namespace:Common.Wpf.Controls;assembly=Common.Wpf.Controls"
             xmlns:cv="clr-namespace:Common.Wpf.Converters;assembly=Common.Wpf.Resources">
  <Application.Resources>
    <ResourceDictionary>

      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/Button.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/CheckBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/ListView.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/PasswordBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/TextBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Resources;component/Themes/TabControl.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Common.Wpf.Controls;component/Themes/Toolbar.xaml"/>
      </ResourceDictionary.MergedDictionaries>

      <!-- Binding Converters -->
      <cv:DateOnlyToDateTime x:Key="DateOnlyToDateTime"/>
      <cv:DateOnlyToString x:Key="DateOnlyToString"/>
      <cv:DecimalToString x:Key="DecimalToString"/>
      <cv:DoubleToString x:Key="DoubleToString"/>
      <cv:IntegerToString x:Key="IntegerToString"/>
      <cv:StringToDateTime x:Key="StringToDateTime"/>

      <!-- Binding.Validation Rules -->
      <!--<cr:ComboEditRule Property="TestType" ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True"/>-->
      <!--<cr:DataOnlyRule Property="TestType" ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True"/>-->
      <!--<cr:IntegerRule Property="TestType" ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True"/>-->
      <!--<cr:RequiredRule Property="TestType" ValidationStep="RawProposedValue" ValidatesOnTargetUpdated="True"/>-->

      <!-- Set common values - Margin is outside the UI element, Padding is inside it -->
      <pf:Thickness x:Key="appMargin">3</pf:Thickness>
      <pf:Thickness x:Key="appPadding">3</pf:Thickness>
      <pf:HorizontalAlignment x:Key="appHorizontalAlignment">Left</pf:HorizontalAlignment>
      <pf:VerticalAlignment x:Key="appVerticalAlignment">Top</pf:VerticalAlignment>

      <!-- Application Styles -->
      <BitmapImage x:Key="appIcon" UriSource=".\Assets\icon-orange.ico"/>
      <Style x:Key="appWindow" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{DynamicResource Common.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource Common.FontSize}"/>
        <Setter Property="SizeToContent" Value="Height"/>
        <Setter Property="MinHeight" Value="480"/>
        <Setter Property="MinWidth" Value="760"/>
        <Setter Property="Width" Value="760"/>
      </Style>

      <Style x:Key="appViewTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Margin" Value="0"/>
      </Style>

      <Style x:Key="appTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,6,3,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
      </Style>

      <Style x:Key="appLayoutStyle" TargetType="{x:Type Control}">
        <Setter Property="Margin" Value="{StaticResource appMargin}"/>
        <Setter Property="Padding" Value="{StaticResource appPadding}"/>
        <Setter Property="HorizontalAlignment" Value="{StaticResource appHorizontalAlignment}"/>
        <Setter Property="VerticalAlignment" Value="{StaticResource appVerticalAlignment}"/>
        <Setter Property="FontWeight" Value="Regular"/>
      </Style>

      <Style x:Key="appLabelStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,6,3,0"/>
      </Style>

      <!-- Navigation Menu -->
      <SolidColorBrush x:Key="navBackground">#1976d2</SolidColorBrush>
      <SolidColorBrush x:Key="navForeground">White</SolidColorBrush>

      <Style TargetType="{x:Type cc:HamburgerMenu}">
        <Setter Property="Background" Value="{DynamicResource navBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource navForeground}"/>
        <Setter Property="Padding" Value="5"/>
      </Style>

      <Style TargetType="{x:Type cc:HamburgerMenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource navForeground}"/>
        <Setter Property="Padding" Value="15,5"/>
        <Setter Property="FontSize" Value="16"/>
      </Style>

      <!-- List View Search -->
      <Style x:Key="appSearchTextBoxStyle" TargetType="{x:Type cc:SearchTextBox}">
        <Setter Property="Padding" Value="{StaticResource appPadding}"/>
        <Setter Property="Margin" Value="1,0,2,2"/>
      </Style>

      <!-- commonTextBoxStyle -->
      <!-- commonTextBoxWithErrorsStyle -->
      <Style x:Key="appTextBoxStyle" TargetType="{x:Type TextBox}"
             BasedOn="{StaticResource commonTextBoxWithErrorsStyle}">
        <!--BasedOn="{StaticResource commonTextBoxStyle}">-->
        <Setter Property="Margin" Value="{StaticResource appMargin}"/>
        <Setter Property="Padding" Value="{StaticResource appPadding}"/>
        <Setter Property="HorizontalAlignment" Value="{StaticResource appHorizontalAlignment}"/>
        <Setter Property="VerticalAlignment" Value="{StaticResource appVerticalAlignment}"/>
      </Style>

      <!-- commonPasswordBoxStyle -->
      <!-- commonPasswordBoxWithErrorsStyle -->
      <Style x:Key="appPasswordBoxStyle" TargetType="{x:Type PasswordBox}"
             BasedOn="{StaticResource commonPasswordBoxWithErrorsStyle}">
        <!--BasedOn="{StaticResource commonPasswordBoxStyle}">-->
        <Setter Property="Margin" Value="{StaticResource appMargin}"/>
        <Setter Property="Padding" Value="{StaticResource appPadding}"/>
        <Setter Property="HorizontalAlignment" Value="{StaticResource appHorizontalAlignment}"/>
        <Setter Property="VerticalAlignment" Value="{StaticResource appVerticalAlignment}"/>
      </Style>

    </ResourceDictionary>
  </Application.Resources>
</Application>